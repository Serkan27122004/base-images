FROM i386/ubuntu:bionic
LABEL io.resin.architecture="i386-nlp"

RUN apt-get update && apt-get install -y --no-install-recommends \
  sudo \
  ca-certificates \
  findutils \
  gnupg \
  dirmngr \
  inetutils-ping \
  netbase \
  curl \
  udev \
  $( \
      if apt-cache show 'iproute' 2>/dev/null | grep -q '^Version:'; then \
        echo 'iproute'; \
      else \
        echo 'iproute2'; \
      fi \
  ) \
  && rm -rf /var/lib/apt/lists/*

RUN set -x \
  && buildDeps='git-core autoconf libtool automake build-essential debhelper fakeroot cmake dpkg-dev devscripts' \
  && apt-get update && apt-get install -y $buildDeps --no-install-recommends && rm -rf /var/lib/apt/lists/* \
  && git clone https://github.com/mdr78/libx1000.git \
  && cd libx1000 \
  && git checkout 1bfb62bb62e0ebe0e42817edd9702d91d232dbee \
  && cd libx1000-0.0.0 \
  && libtoolize --force \
  && aclocal \
  && autoheader \
  && automake --force-missing --add-missing \
  && autoconf \
  && ./autogen.sh \
  && ./configure \
  && make && make install \
  && apt-get purge -y --auto-remove $buildDeps \
  && cd / && rm -rf /libx1000

RUN curl -SLO "http://resin-packages.s3.amazonaws.com/resin-xbuild/v1.0.0/resin-xbuild1.0.0.tar.gz" \
  && echo "1eb099bc3176ed078aa93bd5852dbab9219738d16434c87fc9af499368423437  resin-xbuild1.0.0.tar.gz" | sha256sum -c - \
  && tar -xzf "resin-xbuild1.0.0.tar.gz" \
  && rm "resin-xbuild1.0.0.tar.gz" \
  && chmod +x resin-xbuild \
  && mv resin-xbuild /usr/bin \
  && ln -s resin-xbuild /usr/bin/cross-build-start \
  && ln -s resin-xbuild /usr/bin/cross-build-end

ENV TINI_VERSION 0.14.0
RUN curl -SLO "http://resin-packages.s3.amazonaws.com/tini/v0.14.0/tini0.14.0.linux-i386.tar.gz" \
  && echo "9f4a0b536efdcbe92bc81c6e68dbf8dc1c5739e58f4e7e3a91f07094655149e8  tini0.14.0.linux-i386.tar.gz" | sha256sum -c - \
  && tar -xzf "tini0.14.0.linux-i386.tar.gz" \
  && rm "tini0.14.0.linux-i386.tar.gz" \
  && chmod +x tini \
  && mv tini /sbin/tini

RUN mkdir -p /.resin && echo $'\n\
 __      ___   ___ _  _ ___ _  _  ___ \n\
 \ \    / /_\ | _ \ \| |_ _| \| |/ __|\n\
  \ \/\/ / _ \|   / .` || || .` | (_ |\n\
   \_/\_/_/ \_\_|_\_|\_|___|_|\_|\___|\n\
======================================\n\
resin base images have been deprecated\n\
in favour of the new balenalib images,\n\
read more about it in our docs:\n\
https://www.balena.io/docs/reference/base-images/base-images/\n\
======================================' > /.resin/deprecation-warning

ONBUILD RUN cat /.resin/deprecation-warning

ENV LC_ALL C.UTF-8
# For backward compatibility, udev is enabled by default
ENV UDEV on

RUN mkdir -p /usr/share/man/man1

# Install Systemd

RUN apt-get update && apt-get install -y --no-install-recommends \
        systemd \
        systemd-sysv \
    && rm -rf /var/lib/apt/lists/*

ENV container docker

# We never want these to run in a container
RUN systemctl mask \
    dev-hugepages.mount \
    sys-fs-fuse-connections.mount \
    sys-kernel-config.mount \

    display-manager.service \
    getty@.service \
    systemd-logind.service \
    systemd-remount-fs.service \

    getty.target \
    graphical.target \
    kmod-static-nodes.service

COPY entry.sh /usr/bin/entry.sh

# launch.service
RUN echo '[Unit]\n\
Description=Resin.io User Application\n\
\n\
[Service]\n\
EnvironmentFile=/etc/docker.env\n\
ExecStart=/etc/resinApp.sh\n\
StandardOutput=tty\n\
StandardError=tty\n\
TTYPath=/dev/console\n\
Restart=on-failure\n\
\n\
[Install]\n\
WantedBy=basic.target' > /etc/systemd/system/launch.service

RUN systemctl enable launch.service

STOPSIGNAL 37
ENTRYPOINT ["/usr/bin/entry.sh"]